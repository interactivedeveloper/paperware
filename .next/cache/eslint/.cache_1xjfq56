[{"/Users/jean/Documents/GitHub/paperware-live/pages/_app.tsx":"1","/Users/jean/Documents/GitHub/paperware-live/pages/_document.tsx":"2","/Users/jean/Documents/GitHub/paperware-live/pages/_middleware.ts":"3","/Users/jean/Documents/GitHub/paperware-live/pages/api/hello.ts":"4","/Users/jean/Documents/GitHub/paperware-live/pages/index.tsx":"5","/Users/jean/Documents/GitHub/paperware-live/components/about/About.tsx":"6","/Users/jean/Documents/GitHub/paperware-live/components/certifications/Certifications.tsx":"7","/Users/jean/Documents/GitHub/paperware-live/components/common/ChannelIO.tsx":"8","/Users/jean/Documents/GitHub/paperware-live/components/common/Footer.tsx":"9","/Users/jean/Documents/GitHub/paperware-live/components/common/Header.tsx":"10","/Users/jean/Documents/GitHub/paperware-live/components/common/Layout.tsx":"11","/Users/jean/Documents/GitHub/paperware-live/components/common/TextField.tsx":"12","/Users/jean/Documents/GitHub/paperware-live/components/cover/Cover.tsx":"13","/Users/jean/Documents/GitHub/paperware-live/components/cover/components/MouseScroll.tsx":"14","/Users/jean/Documents/GitHub/paperware-live/components/feature-1/Feature1.tsx":"15","/Users/jean/Documents/GitHub/paperware-live/components/feature-2/Feature2.tsx":"16","/Users/jean/Documents/GitHub/paperware-live/components/feature-2/components/Feature2Item.tsx":"17","/Users/jean/Documents/GitHub/paperware-live/components/feature-2/components/Steps.tsx":"18","/Users/jean/Documents/GitHub/paperware-live/components/feature-2/components/StepsM.tsx":"19","/Users/jean/Documents/GitHub/paperware-live/components/feature-3/Feature3.tsx":"20","/Users/jean/Documents/GitHub/paperware-live/components/feature-3/components/Feature3Item.tsx":"21","/Users/jean/Documents/GitHub/paperware-live/components/history/History.tsx":"22","/Users/jean/Documents/GitHub/paperware-live/components/history/components/HistoryBox.tsx":"23","/Users/jean/Documents/GitHub/paperware-live/components/introduction/Introduction.tsx":"24","/Users/jean/Documents/GitHub/paperware-live/components/papyrus-introduction/PapyrusIntroduction.tsx":"25","/Users/jean/Documents/GitHub/paperware-live/components/partners/Partners.tsx":"26","/Users/jean/Documents/GitHub/paperware-live/components/partners/components/PartnersList.tsx":"27","/Users/jean/Documents/GitHub/paperware-live/components/partners/components/PartnersText.tsx":"28","/Users/jean/Documents/GitHub/paperware-live/components/process/Process.tsx":"29","/Users/jean/Documents/GitHub/paperware-live/components/process/components/InquiryModal.tsx":"30","/Users/jean/Documents/GitHub/paperware-live/lib/gtag.ts":"31"},{"size":776,"mtime":1654401183325,"results":"32","hashOfConfig":"33"},{"size":1191,"mtime":1654319100310,"results":"34","hashOfConfig":"33"},{"size":500,"mtime":1654414666751,"results":"35","hashOfConfig":"33"},{"size":307,"mtime":1651932993274,"results":"36","hashOfConfig":"33"},{"size":2973,"mtime":1654319033264,"results":"37","hashOfConfig":"33"},{"size":5683,"mtime":1654173702485,"results":"38","hashOfConfig":"33"},{"size":6488,"mtime":1654402481139,"results":"39","hashOfConfig":"33"},{"size":1053,"mtime":1653717933188,"results":"40","hashOfConfig":"33"},{"size":3311,"mtime":1654174620228,"results":"41","hashOfConfig":"33"},{"size":2894,"mtime":1654174289644,"results":"42","hashOfConfig":"33"},{"size":850,"mtime":1653718815676,"results":"43","hashOfConfig":"33"},{"size":2358,"mtime":1654395490124,"results":"44","hashOfConfig":"33"},{"size":3287,"mtime":1654402106694,"results":"45","hashOfConfig":"33"},{"size":784,"mtime":1653656193068,"results":"46","hashOfConfig":"33"},{"size":4626,"mtime":1654401178260,"results":"47","hashOfConfig":"33"},{"size":4235,"mtime":1654265694711,"results":"48","hashOfConfig":"33"},{"size":1283,"mtime":1654265694712,"results":"49","hashOfConfig":"33"},{"size":1055,"mtime":1654265694712,"results":"50","hashOfConfig":"33"},{"size":1087,"mtime":1654265694712,"results":"51","hashOfConfig":"33"},{"size":3044,"mtime":1654392526449,"results":"52","hashOfConfig":"33"},{"size":965,"mtime":1653994743829,"results":"53","hashOfConfig":"33"},{"size":1439,"mtime":1653723580224,"results":"54","hashOfConfig":"33"},{"size":1827,"mtime":1653734288107,"results":"55","hashOfConfig":"33"},{"size":922,"mtime":1653725311038,"results":"56","hashOfConfig":"33"},{"size":2969,"mtime":1653994743772,"results":"57","hashOfConfig":"33"},{"size":1292,"mtime":1653464083194,"results":"58","hashOfConfig":"33"},{"size":1601,"mtime":1653663746466,"results":"59","hashOfConfig":"33"},{"size":1810,"mtime":1653463976798,"results":"60","hashOfConfig":"33"},{"size":2844,"mtime":1654392208866,"results":"61","hashOfConfig":"33"},{"size":2302,"mtime":1654414829863,"results":"62","hashOfConfig":"33"},{"size":636,"mtime":1653576968962,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ke1eyc",{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jean/Documents/GitHub/paperware-live/pages/_app.tsx",[],[],"/Users/jean/Documents/GitHub/paperware-live/pages/_document.tsx",[],[],"/Users/jean/Documents/GitHub/paperware-live/pages/_middleware.ts",[],[],"/Users/jean/Documents/GitHub/paperware-live/pages/api/hello.ts",[],[],"/Users/jean/Documents/GitHub/paperware-live/pages/index.tsx",[],[],"/Users/jean/Documents/GitHub/paperware-live/components/about/About.tsx",["162","163"],[],"import classNames from \"classnames\";\nimport { ScrollTrigger } from \"gsap/dist/ScrollTrigger\";\nimport Image from \"next/image\";\nimport Script from \"next/script\";\nimport { useEffect, useRef, useState } from \"react\";\n\nimport useRouteScrolling from \"hooks/useRouteScrolling\";\nimport styles from \"./About.module.scss\";\n\nconst tabs = [\"본사\", \"서울\"];\n\nconst About = () => {\n  const ref = useRef<HTMLElement>(null);\n  useRouteScrolling({ ref, route: \"about\" });\n  const [slideActive, setSlideActive] = useState(0);\n  const [apiLoaded, setApiLoaded] = useState(false);\n  const [mapLoadDeferred, setMapLoadDeferred] = useState(false);\n\n  useEffect(() => {\n    ScrollTrigger.create({\n      trigger: ref.current,\n      start: \"top bottom\",\n      onEnter: loadMap,\n    });\n  }, []);\n\n  useEffect(() => {\n    if (apiLoaded && mapLoadDeferred) {\n      loadMap();\n    }\n  }, [apiLoaded, mapLoadDeferred]);\n\n  const loadMap = () => {\n    if (!apiLoaded) {\n      setMapLoadDeferred(true);\n      return;\n    }\n\n    const { naver } = window;\n    const mapOptions = {\n      zoom: 17,\n      zoomControl: true,\n      draggable: true,\n      pinchZoom: true,\n      scrollWheel: true,\n      keyboardShortcuts: true,\n      disableDoubleTapZoom: false,\n      disableDoubleClickZoom: false,\n      disableTwoFingerTapZoom: false,\n    };\n    const position1 = new naver.maps.LatLng(35.1207, 128.9617);\n    const map1 = new naver.maps.Map(\"map1\", {\n      ...mapOptions,\n      center: position1,\n    });\n    const marker1 = new naver.maps.Marker({\n      position: position1,\n      map: map1,\n      title: \"부산광역시 사상구 하신번영로 445\",\n    });\n    const position2 = new naver.maps.LatLng(37.5452, 127.0567);\n    const map2 = new naver.maps.Map(\"map2\", {\n      ...mapOptions,\n      center: position2,\n    });\n    const marker2 = new naver.maps.Marker({\n      position: position2,\n      map: map2,\n      title: \"서울특별시 성동구 성수일로8길 55\",\n    });\n  };\n\n  return (\n    <>\n      <Script\n        type=\"text/javascript\"\n        src={`https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=${process.env.NEXT_PUBLIC_NAVER_API}`}\n        strategy=\"lazyOnload\"\n        onLoad={() => setApiLoaded(true)}\n      ></Script>\n      <section id=\"about\" ref={ref} className={styles[\"about\"]}>\n        <div>\n          <h3>\n            <Image\n              src=\"/images/logo.svg\"\n              alt=\"Paperware\"\n              width={334.218}\n              height={86.437}\n              layout=\"responsive\"\n              loading=\"lazy\"\n            />\n            Paperware\n          </h3>\n          <p>\n            제지 산업의 유통 공급망 트래픽은 매년 증가하고 있습니다. 기업이\n            관리할 데이터는 기하급수적으로 늘어났지만, 운영 형태는 아날로그\n            방식에 고착되어 있습니다. 기존의 제지업 소프트웨어는 개선 의지가\n            없고, 상용 ERP는 지나치게 제한적입니다.\n          </p>\n          <p>\n            페이퍼웨어는 산업 최초로 공급망을 관리할 수 있는 B2B 클라우드\n            플랫폼, Papyrus 를 제공합니다. 제지 산업의 유통, 프린팅, 패키징까지\n            자동화하는 것이 페이퍼웨어의 존재 이유입니다.\n          </p>\n          <div className={styles[\"about-content\"]}>\n            <div className={styles[\"about-text\"]}>\n              <Image\n                src=\"/images/about_bg.webp?jpg\"\n                layout=\"fill\"\n                loading=\"lazy\"\n                alt=\"\"\n                objectFit=\"cover\"\n              />\n              <ul>\n                <li>\n                  <span>회사명</span>주식회사 페이퍼웨어\n                </li>\n                <li>\n                  <span>대표자명</span>김정현\n                </li>\n                <li>\n                  <span>설립일</span>2020.07.13\n                </li>\n                <li>\n                  <span>본사</span>부산광역시 사상구 하신번영로 445\n                </li>\n                <li>\n                  <span>서울사무소</span>서울특별시 성동구 성수일로8길 55\n                </li>\n                <li>\n                  <span>TEL</span>02-1577-0123\n                </li>\n                <li>\n                  <span>EMAIL</span>info@paperware.kr\n                </li>\n                <li>\n                  <span>사업분야</span>제지 산업 공급망 관리 플랫폼 개발\n                </li>\n              </ul>\n            </div>\n            <div className={styles[\"carousel-container\"]}>\n              <div\n                id=\"map1\"\n                style={{\n                  width: \"100%\",\n                  height: \"440px\",\n                  display: slideActive === 0 ? \"block\" : \"none\",\n                }}\n              />\n              <div\n                id=\"map2\"\n                style={{\n                  width: \"100%\",\n                  height: \"440px\",\n                  display: slideActive === 0 ? \"none\" : \"block\",\n                }}\n              />\n              <ul className={styles[\"dots\"]}>\n                {tabs.map((label, i) => (\n                  <li key={label}>\n                    <button\n                      className={classNames({\n                        [styles[\"active\"]]: i === slideActive,\n                      })}\n                      onClick={() => setSlideActive(i)}\n                    >\n                      {label}\n                    </button>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default About;\n","/Users/jean/Documents/GitHub/paperware-live/components/certifications/Certifications.tsx",[],[],"/Users/jean/Documents/GitHub/paperware-live/components/common/ChannelIO.tsx",["164"],[],"import { ScrollTrigger } from 'gsap/dist/ScrollTrigger';\nimport { useEffect } from 'react';\nimport { ReactChannelIO } from 'react-channel-plugin';\nimport { useRecoilState } from 'recoil';\n\nimport useChannelIO from 'hooks/useChannelIO';\nimport { channelIOBootedState } from 'store/store';\n\nconst ChannelIOHook = () => {\n  const { show, hide } = useChannelIO();\n\n  useEffect(() => {\n    ScrollTrigger.create({\n      trigger: document.querySelector(\"#home\"),\n      start: \"bottom +=1\",\n      toggleActions: \"play none none reverse\",\n      onEnter: show,\n      onLeaveBack: hide,\n    });\n  }, []);\n\n  return null;\n};\n\nconst ChannelIO = () => {\n  const [_, setChannelIOBooted] = useRecoilState(channelIOBootedState);\n\n  const Component = ReactChannelIO as any;\n\n  return (\n    <Component\n      pluginKey=\"4901c2a2-59db-423c-a135-bf76f7b5bff6\"\n      language=\"ko\"\n      autoBoot\n      hideChannelButtonOnBoot\n      onBoot={() => setChannelIOBooted(true)}\n      verbose={false}\n    >\n      <ChannelIOHook />\n    </Component>\n  );\n};\n\nexport default ChannelIO;\n","/Users/jean/Documents/GitHub/paperware-live/components/common/Footer.tsx",[],[],"/Users/jean/Documents/GitHub/paperware-live/components/common/Header.tsx",[],[],"/Users/jean/Documents/GitHub/paperware-live/components/common/Layout.tsx",[],[],"/Users/jean/Documents/GitHub/paperware-live/components/common/TextField.tsx",["165"],[],"import classNames from 'classnames';\nimport { ChangeEvent, InputHTMLAttributes, useMemo, useState } from 'react';\nimport { RegisterOptions, useController } from 'react-hook-form';\nimport TextareaAutosize from 'react-textarea-autosize';\n\nimport styles from './TextField.module.scss';\n\ninterface Props extends InputHTMLAttributes<HTMLInputElement> {\n  className?: string;\n  label: string;\n  name: string;\n  required?: boolean;\n  textarea?: boolean;\n  numeric?: boolean;\n  rules?: Exclude<\n    RegisterOptions,\n    \"valueAsNumber\" | \"valueAsDate\" | \"setValueAs\"\n  >;\n}\n\nexport const numericRegex = /[^0-9-+]/g;\n\nconst TextField = ({\n  className,\n  label,\n  name,\n  required,\n  textarea,\n  type = \"text\",\n  rules,\n  numeric,\n  ...rest\n}: Props) => {\n  const InputElement = useMemo(() => {\n    return (textarea ? TextareaAutosize : \"input\") as any;\n  }, []);\n\n  const {\n    field,\n    fieldState: { error },\n  } = useController({\n    name,\n    rules: { ...rules, required },\n    defaultValue: \"\",\n  });\n\n  const [isFocus, setFocus] = useState(false);\n  const onFocus = () => {\n    setFocus(true);\n  };\n  const onBlur = () => {\n    setFocus(false);\n    field.onBlur();\n  };\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    if (!numeric) {\n      field.onChange(e);\n    } else {\n      const { value } = e.target;\n      if (value.match(numericRegex)) {\n        field.onChange(+value.replace(numericRegex, \"\"));\n      } else {\n        field.onChange(value);\n      }\n    }\n  };\n\n  return (\n    <>\n      <div\n        className={classNames(\n          styles[\"form-group\"],\n          { [styles[\"error\"]]: error },\n          className\n        )}\n      >\n        <label htmlFor=\"\">\n          {label}\n          {required ? \"*\" : \"\"}\n        </label>\n        <div\n          className={classNames(styles[\"form-wrapper\"], {\n            [styles[\"textarea\"]]: textarea,\n            [styles[\"is-focus\"]]: isFocus,\n          })}\n        >\n          <InputElement\n            ref={field.ref}\n            className={styles[\"text-field\"]}\n            type={type}\n            onFocus={onFocus}\n            onBlur={onBlur}\n            autoComplete=\"off\"\n            value={field.value}\n            onChange={onChange}\n            minRows={1}\n            maxRows={5}\n            {...rest}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default TextField;\n","/Users/jean/Documents/GitHub/paperware-live/components/cover/Cover.tsx",["166"],[],"import classNames from 'classnames';\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/dist/ScrollTrigger';\nimport Image from 'next/image';\nimport Carousel, {\n  CarouselProps,\n  CarouselSlideRenderControlProps,\n} from 'nuka-carousel';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { useRecoilState } from 'recoil';\n\nimport useRouteScrolling from 'hooks/useRouteScrolling';\nimport { scrollStartedState } from 'store/store';\nimport MouseScroll from './components/MouseScroll';\nimport styles from './Cover.module.scss';\n\nconst settings: CarouselProps = {\n  wrapAround: true,\n  animation: \"fade\",\n  autoplay: true,\n  autoplayInterval: 5000,\n  swiping: false,\n  dragging: false,\n  renderCenterLeftControls: null,\n  renderCenterRightControls: null,\n  renderBottomCenterControls: null,\n};\n\nconst Cover = () => {\n  const ref = useRef<HTMLElement>(null);\n  useRouteScrolling({ ref, route: \"\" });\n  const [_, setScrollStarted] = useRecoilState(scrollStartedState);\n\n  const [slideActive, setSlideActive] = useState(0);\n\n  useEffect(() => {\n    ScrollTrigger.create({\n      trigger: ref.current,\n      start: \"+=1 top\",\n      onEnter: () => setScrollStarted(true),\n    });\n    setTimeout(() => setScrollStarted(true), 5000);\n\n    gsap.to(\"header\", {\n      scrollTrigger: {\n        trigger: ref.current,\n        start: \"bottom +=1\",\n        toggleActions: \"play none none reverse\",\n      },\n      opacity: 1,\n      duration: 0.2,\n    });\n  }, []);\n\n  const beforeSlide = (currentSlide: number, nextSlide: number) =>\n    setSlideActive(nextSlide % 5);\n\n  const renderTopCenterControls = useCallback(\n    ({ goToSlide }: CarouselSlideRenderControlProps) => (\n      <ul className={styles[\"dots\"]}>\n        {[1, 2, 3, 4, 5].map((i) => (\n          <li\n            key={i}\n            className={classNames(styles[\"dot\"], {\n              [styles[\"active\"]]: i - 1 === slideActive,\n            })}\n          >\n            <button\n              onClick={() => {\n                if (i - 1 !== slideActive) {\n                  goToSlide(i - 1);\n                }\n              }}\n            >\n              {i - 1}\n            </button>\n          </li>\n        ))}\n      </ul>\n    ),\n    [slideActive]\n  );\n\n  return (\n    <section id=\"home\" className={styles[\"cover\"]} ref={ref}>\n      <div className={styles[\"cover-content\"]}>\n        <h2>\n          <Image\n            src=\"/images/logo.svg\"\n            alt=\"Paperware\"\n            width={334.218}\n            height={86.437}\n            layout=\"responsive\"\n            priority\n          />\n          Paperware\n        </h2>\n      </div>\n      <Carousel\n        {...settings}\n        beforeSlide={beforeSlide}\n        renderTopCenterControls={renderTopCenterControls}\n      >\n        {[1, 2, 3, 4, 5].map((i) => (\n          <div key={i}>\n            <div className={styles[\"slide\"]}>\n              <Image\n                src={`/images/main_visual0${i}.jpg`}\n                layout=\"fill\"\n                objectFit=\"cover\"\n                alt=\"\"\n                priority={i === 1}\n                loading={i === 1 ? \"eager\" : \"lazy\"}\n                quality={90}\n              />\n            </div>\n          </div>\n        ))}\n      </Carousel>\n      <MouseScroll />\n    </section>\n  );\n};\n\nexport default Cover;\n","/Users/jean/Documents/GitHub/paperware-live/components/cover/components/MouseScroll.tsx",[],[],"/Users/jean/Documents/GitHub/paperware-live/components/feature-1/Feature1.tsx",[],[],"/Users/jean/Documents/GitHub/paperware-live/components/feature-2/Feature2.tsx",[],[],"/Users/jean/Documents/GitHub/paperware-live/components/feature-2/components/Feature2Item.tsx",["167"],[],"import \"react-popper-tooltip/dist/styles.css\";\n\nimport classNames from \"classnames\";\nimport { memo, useEffect } from \"react\";\nimport { usePopperTooltip } from \"react-popper-tooltip\";\n\nimport styles from \"./Feature2Item.module.scss\";\n\ninterface Props {\n  title: string;\n  description: string;\n  active: boolean;\n  index: number;\n  isSmallDevice?: boolean;\n}\n\nconst Feature2Item = ({\n  title,\n  description,\n  active,\n  index,\n  isSmallDevice,\n}: Props) => {\n  const { getTooltipProps, setTooltipRef, setTriggerRef, visible } =\n    usePopperTooltip({\n      offset: [0, 30],\n    });\n\n  useEffect(() => {\n    setTriggerRef(\n      document.querySelector(\n        `#step-${isSmallDevice ? \"m-\" : \"\"}${index + 1}-container`\n      ) as HTMLElement\n    );\n  }, []);\n\n  return (\n    <>\n      {active && visible && (\n        <div\n          ref={setTooltipRef}\n          {...getTooltipProps({\n            className: classNames(\n              [\"tooltip-container\"],\n              styles[\"tooltip-container\"]\n            ),\n          })}\n        >\n          <div>\n            <h3 className={styles[\"tooltip-title\"]}>{title}</h3>\n            <p className={styles[\"tooltip-description\"]}>{description}</p>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default memo(Feature2Item);\n","/Users/jean/Documents/GitHub/paperware-live/components/feature-2/components/Steps.tsx",[],[],"/Users/jean/Documents/GitHub/paperware-live/components/feature-2/components/StepsM.tsx",[],[],"/Users/jean/Documents/GitHub/paperware-live/components/feature-3/Feature3.tsx",[],[],"/Users/jean/Documents/GitHub/paperware-live/components/feature-3/components/Feature3Item.tsx",[],[],"/Users/jean/Documents/GitHub/paperware-live/components/history/History.tsx",[],[],"/Users/jean/Documents/GitHub/paperware-live/components/history/components/HistoryBox.tsx",[],[],"/Users/jean/Documents/GitHub/paperware-live/components/introduction/Introduction.tsx",[],[],"/Users/jean/Documents/GitHub/paperware-live/components/papyrus-introduction/PapyrusIntroduction.tsx",[],[],"/Users/jean/Documents/GitHub/paperware-live/components/partners/Partners.tsx",[],[],"/Users/jean/Documents/GitHub/paperware-live/components/partners/components/PartnersList.tsx",[],[],"/Users/jean/Documents/GitHub/paperware-live/components/partners/components/PartnersText.tsx",[],[],"/Users/jean/Documents/GitHub/paperware-live/components/process/Process.tsx",[],[],"/Users/jean/Documents/GitHub/paperware-live/components/process/components/InquiryModal.tsx",[],[],"/Users/jean/Documents/GitHub/paperware-live/lib/gtag.ts",[],[],{"ruleId":"168","severity":1,"message":"169","line":25,"column":6,"nodeType":"170","endLine":25,"endColumn":8,"suggestions":"171"},{"ruleId":"168","severity":1,"message":"169","line":31,"column":6,"nodeType":"170","endLine":31,"endColumn":34,"suggestions":"172"},{"ruleId":"168","severity":1,"message":"173","line":20,"column":6,"nodeType":"170","endLine":20,"endColumn":8,"suggestions":"174"},{"ruleId":"168","severity":1,"message":"175","line":36,"column":6,"nodeType":"170","endLine":36,"endColumn":8,"suggestions":"176"},{"ruleId":"168","severity":1,"message":"177","line":53,"column":6,"nodeType":"170","endLine":53,"endColumn":8,"suggestions":"178"},{"ruleId":"168","severity":1,"message":"179","line":35,"column":6,"nodeType":"170","endLine":35,"endColumn":8,"suggestions":"180"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadMap'. Either include it or remove the dependency array.","ArrayExpression",["181"],["182"],"React Hook useEffect has missing dependencies: 'hide' and 'show'. Either include them or remove the dependency array.",["183"],"React Hook useMemo has a missing dependency: 'textarea'. Either include it or remove the dependency array.",["184"],"React Hook useEffect has a missing dependency: 'setScrollStarted'. Either include it or remove the dependency array.",["185"],"React Hook useEffect has missing dependencies: 'index', 'isSmallDevice', and 'setTriggerRef'. Either include them or remove the dependency array.",["186"],{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},"Update the dependencies array to be: [loadMap]",{"range":"199","text":"200"},"Update the dependencies array to be: [apiLoaded, loadMap, mapLoadDeferred]",{"range":"201","text":"202"},"Update the dependencies array to be: [hide, show]",{"range":"203","text":"204"},"Update the dependencies array to be: [textarea]",{"range":"205","text":"206"},"Update the dependencies array to be: [setScrollStarted]",{"range":"207","text":"208"},"Update the dependencies array to be: [index, isSmallDevice, setTriggerRef]",{"range":"209","text":"210"},[762,764],"[loadMap]",[856,884],"[apiLoaded, loadMap, mapLoadDeferred]",[589,591],"[hide, show]",[849,851],"[textarea]",[1473,1475],"[setScrollStarted]",[752,754],"[index, isSmallDevice, setTriggerRef]"]